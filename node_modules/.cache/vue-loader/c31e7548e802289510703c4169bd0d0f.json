{"remainingRequest":"/Users/tomo/Documents/projects/vue-diplomski/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/tomo/Documents/projects/vue-diplomski/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/tomo/Documents/projects/vue-diplomski/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tomo/Documents/projects/vue-diplomski/src/components/RoleForm.vue?vue&type=template&id=5bb18cec&scoped=true&","dependencies":[{"path":"/Users/tomo/Documents/projects/vue-diplomski/src/components/RoleForm.vue","mtime":1680973315984},{"path":"/Users/tomo/Documents/projects/vue-diplomski/node_modules/cache-loader/dist/cjs.js","mtime":1680948621095},{"path":"/Users/tomo/Documents/projects/vue-diplomski/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1680948623381},{"path":"/Users/tomo/Documents/projects/vue-diplomski/node_modules/cache-loader/dist/cjs.js","mtime":1680948621095},{"path":"/Users/tomo/Documents/projects/vue-diplomski/node_modules/vue-loader/lib/index.js","mtime":1680948623381}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}